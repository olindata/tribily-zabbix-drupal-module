<?php

// $Id$

include_once 'zabbix_functions.php';

/**
 * Implementation of hook_help().
 */
function zabbix_bridge_help($path, $arg) {
    return '<p>' .
    t('This module provides integration between drupal and Zabbix.') .
    '</p>';
}

/**
 * Implementation fo hook_init()
 */
function zabbix_bridge_init() {
  drupal_add_css(drupal_get_path('module', 'zabbix_bridge') . '/zabbix_bridge.css');
}

/**
 * Implementation of hook_menu().
 */
function zabbix_bridge_menu() {
    //Module settings menu items (only accessible to admins)
    $items['admin/config/zabbix_bridge'] = array(
        'title' => 'Zabbix Bridge',
        'page callback' => 'zabbix_bridge_hosts_form',
        'description' => 'List of the hosts created by this module',
        'file' => 'zabbix_bridge.admin.inc',
        'access arguments' => array(PERM_ADMIN),
    );

    $items['admin/config/zabbix_bridge/hosts'] = array(
        'title' => 'Hosts',
        'page callback' => 'zabbix_bridge_hosts_form',
        'file' => 'zabbix_bridge.admin.inc',
        'weight' => 20,
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array(PERM_ADMIN),
    );

    $items['admin/config/zabbix_bridge/emails'] = array(
        'title' => 'Emails',
        'page callback' => 'zabbix_bridge_admin_emails',
        'file' => 'zabbix_bridge.admin.inc',
        'weight' => 20,
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array(PERM_ADMIN),
    );

    $items['admin/config/zabbix_bridge/mobiles'] = array(
        'title' => 'Mobiles',
        'page callback' => 'zabbix_bridge_admin_mobiles',
        'file' => 'zabbix_bridge.admin.inc',
        'weight' => 20,
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array(PERM_ADMIN),
    );

    $items['admin/config/zabbix_bridge/jabbers'] = array(
        'title' => 'Jabbers',
        'page callback' => 'zabbix_bridge_admin_jabbers',
        'file' => 'zabbix_bridge.admin.inc',
        'weight' => 20,
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array(PERM_ADMIN),
    );

    $items['admin/config/zabbix_bridge/roles'] = array(
        'title' => 'Roles',
        'page callback' => 'zabbix_bridge_admin_roles_mapping',
        'file' => 'zabbix_bridge.admin.inc',
        'weight' => 20,
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array(PERM_ADMIN),
    );

    $items['admin/config/zabbix_bridge/users'] = array(
        'title' => 'Users',
        'page callback' => 'zabbix_bridge_admin_user_mappings',
        'file' => 'zabbix_bridge.admin.inc',
        'weight' => 20,
        'type' => MENU_LOCAL_TASK,
        'access arguments' => array(PERM_ADMIN),
    );

    $items['admin/config/zabbix_bridge/settings'] = array(
        'title' => 'Settings',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_settings_form'),
        'description' => 'Configure the Zabbix Bridge module.',
        'file' => 'zabbix_bridge.admin.inc',
        'type' => MENU_LOCAL_TASK,
        'weight' => 30,
        'access arguments' => array(PERM_ADMIN),
    );

    // settins page to change alert notifications
  $items['admin/config/zabbix_bridge/alert_notifications'] = array(
        'title' => 'Alert Notifications',
        'page callback' => 'zabbix_bridge_alert_notifications',
        'file' => 'zabbix_bridge.admin.inc',
        'description' => 'Change the alert texts sent by zabbix when an alert happens.',
        'type' => MENU_LOCAL_TASK,
        'weight' => 30,
        'access arguments' => array(PERM_ADMIN),
    );

    // Redirect to the dashboard
    $items['dashboard'] = array(
        'title' => 'Dashboard',
        'page callback' => 'zabbix_dashboard_dashboard',
        'access arguments' => array(PERM_DASHBOARD),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.dashboard.inc',
    );

    // Hosts menu item (accessible to user)
    $items['hosts/overview'] = array(
        'title' => 'Monitored Hosts',
        'page callback' => 'zabbix_hosts_overview',
        'access arguments' => array(PERM_HOSTS_SELECT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.hosts.inc',
    );

    // Hosts actions (accessible to user and admin)
    $items['hosts/add'] = array(
        'title' => 'Add Monitored Hosts',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_hosts_form', 1),
        'access arguments' => array(PERM_HOSTS_INSERT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.hosts.inc',
    );

    $items['hosts/update/%'] = array(
        'title' => 'Add Monitored Hosts',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_hosts_form', 1, 2),
        'access arguments' => array(PERM_HOSTS_UPDATE),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.hosts.inc',
    );

    $items['hosts/%/triggers'] = array(
        'title' => 'Triggers',
        'page callback' => 'zabbix_bridge_triggers_overview',
        'page arguments' => array( 1),
        'access arguments' => array(PERM_HOSTS_SELECT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.triggers.inc',
    );
    $items['hosts/%/triggers/%/%'] = array(
        'title' => 'Enable/Disable triggers',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_triggers_toggle_confirm', 1, 3, 4),
        'access arguments' => array(PERM_HOSTS_UPDATE),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.triggers.inc',
    );

    $items['hosts/delete/%'] = array(
        'title' => t('Delete Host'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('host_delete_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_HOSTS_DELETE),
        'file' => 'zabbix_bridge.hosts.inc',
    );

    $items['hosts/enable-disable/%'] = array(
        'title' => t('Enable/Disable Host'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('host_enable_disable_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_HOSTS_UPDATE),
        'file' => 'zabbix_bridge.hosts.inc',
    );

    $items['hosts/import'] = array(
        'title' => t('Import hosts from zabbix'),
        'page callback' => 'zabbix_bridge_import_hosts',
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.hosts.inc',
    );

    // Drupal to zabbix mapping actions (Only accessible to admins)
    $items['zabbix-user-mapping/update/%'] = array(
        'title' => t('Update Drupal-to-Zabbix user mapping'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_user_mapping_form', 1, 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.user_mapping.inc',
    );

    $items['zabbix-user-mapping/delete/%'] = array(
        'title' => t('Delete Drupal-to-Zabbix user mapping'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_user_mapping_delete_confirm', 1, 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.user_mapping.inc',
    );

    $items['zabbix-user-mapping/generate/%'] = array(
        'title' => t('Generate missing zabbix object for this Drupal-to-Zabbix user mapping'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_user_mapping_generate_confirm', 1, 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.user_mapping.inc',
    );

    $items['zabbix-user-mapping/add'] = array(
        'title' => t('Add a new mapping to the bridge'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_user_mapping_form', 1),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.user_mapping.inc',
    );

    // Host role to Zabbix template mapping actions (Only accessible to admins)
    $items['zabbix-role-mapping/update/%'] = array(
        'title' => t('Update Drupal-to-Zabbix role mapping'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_role_mapping_form', 1, 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.role_mapping.inc',
    );

    $items['zabbix-role-mapping/delete/%'] = array(
        'title' => t('Delete Drupal-to-Zabbix role mapping'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_role_mapping_delete_confirm', 1, 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.role_mapping.inc',
    );

    $items['zabbix-role-mapping/add'] = array(
        'title' => t('Add a new mapping to the bridge'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_role_mapping_form', 1),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.role_mapping.inc',
    );

    $items['zabbix-role-mapping/import'] = array(
        'title' => t('Import roles to the bridge'),
        'page callback' => 'zabbix_bridge_import_roles',
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.role_mapping.inc',
    );

    // emails overview (accessible to user)
    $items['emails/overview'] = array(
        'title' => 'Emails',
        'page callback' => 'zabbix_bridge_emails',
        'access arguments' => array(PERM_EMAIL_SELECT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.emails.inc',
    );

    // add emails
    $items['emails/add'] = array(
        'title' => 'Add Email',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_emails_form', 1),
        'access arguments' => array(PERM_EMAIL_INSERT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.emails.inc',
    );

    // update emails
    $items['emails/update/%'] = array(
        'title' => 'Update Emails',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_emails_form', 1, 2),
        'access arguments' => array(PERM_EMAIL_UPDATE),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.emails.inc',
    );

    // delete emails
    $items['emails/delete/%'] = array(
        'title' => t('Delete Email'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_emails_delete_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_EMAIL_DELETE),
        'file' => 'zabbix_bridge.emails.inc',
    );

    // enable-disable emails
    $items['emails/enable-disable/%'] = array(
        'title' => t('Enable/Disable Email'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_emails_enable_disable_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_EMAIL_UPDATE),
        'file' => 'zabbix_bridge.emails.inc',
    );

    $items['emails/import'] = array(
        'title' => t('Import email addresses to the bridge'),
        'page callback' => 'zabbix_bridge_import_emails',
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.emails.inc',
    );

    // mobile number overview (accessible to user)
    $items['mobiles/overview'] = array(
        'title' => 'Mobile',
        'page callback' => 'zabbix_bridge_mobiles',
        'access arguments' => array(PERM_MOBILES_SELECT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.mobiles.inc',
    );

    // add mobile number
    $items['mobiles/add'] = array(
        'title' => 'Add Mobile',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_mobiles_form', 1),
        'access arguments' => array(PERM_MOBILES_INSERT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.mobiles.inc',
    );

    // update mobile number
    $items['mobiles/update/%'] = array(
        'title' => 'Update Mobile',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_mobiles_form', 1, 2),
        'access arguments' => array(PERM_MOBILES_UPDATE),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.mobiles.inc',
    );

    // delete mobile numbers
    $items['mobiles/delete/%'] = array(
        'title' => t('Delete Mobile'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_mobiles_delete_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_MOBILES_DELETE),
        'file' => 'zabbix_bridge.mobiles.inc',
    );

    // enable-disable mobile numbers
    $items['mobiles/enable-disable/%'] = array(
        'title' => t('Enable/Disable Mobile'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_mobiles_enable_disable_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_MOBILES_UPDATE),
        'file' => 'zabbix_bridge.mobiles.inc',
    );

    $items['mobiles/import'] = array(
        'title' => t('Import mobile numbers to the bridge'),
        'page callback' => 'zabbix_bridge_import_mobiles',
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.mobiles.inc',
    );

    // jabber overview (accessible to user)
    $items['jabbers/overview'] = array(
        'title' => 'Jabber',
        'page callback' => 'zabbix_bridge_jabbers',
        'access arguments' => array(PERM_JABBER_SELECT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.jabbers.inc',
    );

    // add jabber
    $items['jabbers/add'] = array(
        'title' => 'Add Jabber',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_jabbers_form', 1),
        'access arguments' => array(PERM_JABBER_INSERT),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.jabbers.inc',
    );

    // update jabber
    $items['jabbers/update/%'] = array(
        'title' => 'Update Jabber',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_jabbers_form', 1, 2),
        'access arguments' => array(PERM_JABBER_UPDATE),
        'type' => MENU_CALLBACK,
        'file' => 'zabbix_bridge.jabbers.inc',
    );

    // delete jabber
    $items['jabbers/delete/%'] = array(
        'title' => t('Delete Jabber'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_jabbers_delete_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_JABBER_DELETE),
        'file' => 'zabbix_bridge.jabbers.inc',
    );

    // enable-disable jabber
    $items['jabbers/enable-disable/%'] = array(
        'title' => t('Enable/Disable Jabber'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('zabbix_bridge_jabbers_enable_disable_confirm', 2),
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_JABBER_UPDATE),
        'file' => 'zabbix_bridge.jabbers.inc',
    );

    $items['jabbers/import'] = array(
        'title' => t('Import Jabber IDs to the bridge'),
        'page callback' => 'zabbix_bridge_import_jabbers',
        'type' => MENU_CALLBACK,
        'access arguments' => array(PERM_ADMIN),
        'file' => 'zabbix_bridge.jabbers.inc',
    );

    return $items;
}

/*
 * Implementation of hook_perm()
 */

function zabbix_bridge_permission() {

  return array(
      PERM_HOSTS_SELECT,
      'add hosts',
      'delete hosts',
      'update hosts',
      'access emails',
      'add emails',
      'delete emails',
      'update emails',
      'access mobiles',
      'add mobiles',
      'delete mobiles',
      'update mobiles',
      'access jabbers',
      'add jabbers',
      'delete jabbers',
      'update jabbers',
      'access dashboard');
}

/**
 * Act on user account actions.
 *
 * This hook allows modules to react when operations are performed on user accounts.
 *
 * Parameters
 * &$edit The array of form values submitted by the user.
 *
 * &$account The user object on which the operation is being performed.
 *
 * $category The active category of user information being edited.
 *
 * Return value
 * none.
 *
 */
function zabbix_bridge_user_insert(&$edit, &$account, $category = NULL) {

      zabbix_bridge_create_zabbix_user($edit['name'],
              $edit['pass'],
              $edit['mail'],
              $account->uid);
}

function zabbix_bridge_user_delete(&$edit, &$account, $category = NULL) {
    
      zabbix_bridge_delete_zabbix_user($edit, $account, $category);
      
}

function zabbix_bridge_user_update(&$edit, &$account, $category = NULL) {

	//TODO: make updates flow correctly
    zabbix_bridge_update_zabbix_user($edit, $account, $category);
}

/**
 * Setup the actions
 *
 * We setup the action for disable all hosts of the desired user
 *
 * @author Daniel Werner <daniel@tribily.com>
 */
function zabbix_bridge_action_info()
{
  return array(
    'zabbix_bridge_action_disable_host' => array(
      'label' => t('Disable all Hosts of the desired user'),
      'type' => 'user',
      'configurable' => FALSE,
      'triggers' => array('any'),
    )
  );
}